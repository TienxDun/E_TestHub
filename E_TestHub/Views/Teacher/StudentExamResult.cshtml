@{
    ViewData["Title"] = "Chi tiết kết quả thi - Giáo Viên";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    
    var studentInfo = ViewBag.StudentInfo;
    var examInfo = ViewBag.ExamInfo;
    var questions = ViewBag.Questions as List<dynamic>;
    var timeSpent = ViewBag.TimeSpent;
    var accuracy = ViewBag.Accuracy;
}

@section Styles {
    <link href="~/css/shared/dashboard.css" rel="stylesheet">
    <link href="~/css/teacher/student-exam-result.css" rel="stylesheet">
}

<div class="exam-results-container">
    <!-- Left Sidebar - Question List & Info -->
    <div class="questions-sidebar">
        <!-- Student Info Section -->
        <div class="sidebar-header">
            <div class="student-info-card">
                <div class="student-avatar">
                    <i class="fas fa-user-circle"></i>
                </div>
                <div class="student-details">
                    <div class="student-name">@studentInfo.Name</div>
                    <div class="student-id">MSSV: @studentInfo.Id</div>
                </div>
            </div>
        </div>

        <!-- Exam Details Section -->
        <div class="exam-details-section">
            <h4 class="section-title">
                <i class="fas fa-info-circle"></i>
                Thông tin bài thi
            </h4>
            
            <div class="info-row">
                <span class="info-label">
                    <i class="fas fa-calendar-alt"></i>
                    Ngày thi:
                </span>
                <span class="info-value">@examInfo.ExamDate.ToString("dd/MM/yyyy HH:mm")</span>
            </div>
            
            <div class="info-row">
                <span class="info-label">
                    <i class="fas fa-clock"></i>
                    Thời gian nộp:
                </span>
                <span class="info-value">@examInfo.SubmittedAt.ToString("dd/MM/yyyy HH:mm")</span>
            </div>
            
            <div class="info-row">
                <span class="info-label">
                    <i class="fas fa-hourglass-half"></i>
                    Thời gian làm bài:
                </span>
                <span class="info-value">@timeSpent phút</span>
            </div>
            
            <div class="info-row highlight">
                <span class="info-label">
                    <i class="fas fa-chart-line"></i>
                    Độ chính xác:
                </span>
                <span class="info-value accuracy">@accuracy%</span>
            </div>
            
            <div class="info-row highlight">
                <span class="info-label">
                    <i class="fas fa-star"></i>
                    Điểm số:
                </span>
                <span class="info-value score">@examInfo.Score/@examInfo.MaxScore</span>
            </div>
        </div>
        
        <!-- Question Statistics -->
        <div class="question-stats">
            <div class="stat-row">
                <span class="stat-label">Tổng số câu:</span>
                <span class="stat-value">@examInfo.TotalQuestions</span>
            </div>
            <div class="stat-row">
                <span class="stat-label">Đúng:</span>
                <span class="stat-value correct">@examInfo.CorrectAnswers</span>
            </div>
            <div class="stat-row">
                <span class="stat-label">Sai:</span>
                <span class="stat-value incorrect">@examInfo.IncorrectAnswers</span>
            </div>
        </div>
        
        <!-- Question Grid -->
        <div class="question-grid" id="questionGrid">
            @if (questions != null)
            {
                @for (int i = 0; i < questions.Count; i++)
                {
                    var question = questions[i];
                    var cssClass = question.IsCorrect ? "correct" : "incorrect";
                    <div class="question-number @cssClass" data-question="@(i + 1)" onclick="showQuestion(@(i + 1))">@(i + 1)</div>
                }
            }
        </div>
    </div>

    <!-- Main Content Area -->
    <div class="exam-main-content">
        <!-- Header -->
        <div class="exam-header">
            <div class="header-left">
                <a href="javascript:history.back()" class="back-btn">
                    <i class="fas fa-arrow-left"></i>
                    Quay lại
                </a>
                <h2 class="exam-title">@examInfo.Name - @examInfo.Subject</h2>
            </div>
        </div>

        <!-- Question Content -->
        <div class="question-content">
            <div id="questionContainer">
                @if (questions != null)
                {
                    for (int i = 0; i < questions.Count; i++)
                    {
                        var question = questions[i];
                        var questionNum = i + 1;
                        var displayStyle = i == 0 ? "block" : "none";
                        var options = question.Options as string[];
                        var optionLabels = new[] { "A", "B", "C", "D" };
                        
                        <div class="question-block" id="question@questionNum" style="display: @displayStyle;">
                            <div class="question-header">
                                <h3 class="question-title">Câu @questionNum</h3>
                                <p class="question-text">@question.Text</p>
                            </div>
                            
                            <ul class="answer-options">
                                @if (options != null)
                                {
                                    for (int j = 0; j < options.Length; j++)
                                    {
                                        var optionLabel = optionLabels[j];
                                        var isStudentAnswer = question.StudentAnswer == optionLabel;
                                        var isCorrectAnswer = question.CorrectAnswer == optionLabel;
                                        var cssClass = "";
                                        var statusHtml = "";
                                        
                                        if (isStudentAnswer && isCorrectAnswer)
                                        {
                                            cssClass = "user-selected correct";
                                            statusHtml = "<span class=\"answer-status correct\"><i class=\"fas fa-check-circle\"></i> Đáp án đúng</span>";
                                        }
                                        else if (isStudentAnswer && !isCorrectAnswer)
                                        {
                                            cssClass = "user-selected incorrect";
                                            statusHtml = "<span class=\"answer-status incorrect\"><i class=\"fas fa-times-circle\"></i> Sai</span>";
                                        }
                                        else if (!isStudentAnswer && isCorrectAnswer)
                                        {
                                            cssClass = "correct-answer";
                                            statusHtml = "<span class=\"answer-status correct\"><i class=\"fas fa-check-circle\"></i> Đáp án đúng</span>";
                                        }
                                        
                                        <li class="answer-option @cssClass">
                                            <label>
                                                <input type="radio" name="q@questionNum" value="@optionLabel" disabled @(isStudentAnswer ? "checked" : "")>
                                                <span class="answer-text">@options[j]</span>
                                                @Html.Raw(statusHtml)
                                            </label>
                                        </li>
                                    }
                                }
                            </ul>
                            
                            <div class="question-result-summary">
                                @if (question.IsCorrect)
                                {
                                    <div class="result-badge correct">
                                        <i class="fas fa-check-circle"></i>
                                        Trả lời đúng
                                    </div>
                                }
                                else
                                {
                                    <div class="result-badge incorrect">
                                        <i class="fas fa-times-circle"></i>
                                        Trả lời sai
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
            </div>
            
            <!-- Navigation Buttons -->
            <div class="question-navigation">
                <button id="prevBtn" class="nav-btn prev-btn" onclick="previousQuestion()">
                    <i class="fas fa-chevron-left"></i>
                    Câu trước
                </button>
                
                <div class="question-counter">
                    Câu <span id="currentQuestionNum">1</span>/@examInfo.TotalQuestions
                </div>
                
                <button id="nextBtn" class="nav-btn next-btn" onclick="nextQuestion()">
                    Câu sau
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentQuestionIndex = 1;
        const totalQuestions = @examInfo.TotalQuestions;

        function showQuestion(questionNum) {
            // Hide all questions
            for (let i = 1; i <= totalQuestions; i++) {
                const questionElement = document.getElementById(`question${i}`);
                if (questionElement) {
                    questionElement.style.display = 'none';
                }
            }

            // Show selected question
            const selectedQuestion = document.getElementById(`question${questionNum}`);
            if (selectedQuestion) {
                selectedQuestion.style.display = 'block';
            } else {
                console.log(`Question ${questionNum} not found`);
            }

            // Update current question index
            currentQuestionIndex = questionNum;

            // Update navigation buttons
            updateNavigationButtons();

            // Update question counter
            document.getElementById('currentQuestionNum').textContent = questionNum;

            // Update question number highlighting
            updateQuestionHighlight();
        }

        function updateQuestionHighlight() {
            // Remove current class from all question numbers
            document.querySelectorAll('.question-number').forEach(element => {
                element.classList.remove('current');
            });

            // Add current class to selected question using data-question attribute
            const currentElement = document.querySelector(`.question-number[data-question="${currentQuestionIndex}"]`);
            if (currentElement) {
                currentElement.classList.add('current');
            }
        }

        function updateNavigationButtons() {
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');

            prevBtn.disabled = currentQuestionIndex === 1;
            nextBtn.disabled = currentQuestionIndex === totalQuestions;
        }

        function previousQuestion() {
            if (currentQuestionIndex > 1) {
                showQuestion(currentQuestionIndex - 1);
            }
        }

        function nextQuestion() {
            if (currentQuestionIndex < totalQuestions) {
                showQuestion(currentQuestionIndex + 1);
            }
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            showQuestion(1);
        });
    </script>
}
