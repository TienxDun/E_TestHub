@{
    ViewData["Title"] = "Bài thi của tôi - Sinh Viên";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

@section Styles {
    <link href="~/css/shared/dashboard.css" rel="stylesheet">
    <link href="~/css/student/my-exams.css" rel="stylesheet">
}

<div class="my-exams-container">
    <div class="my-exams-header">
        <h1 class="my-exams-title">Lịch thi</h1>
        
        <!-- Exam Filters -->
        <div class="exam-filters">
            <div class="filter-group search-filter">
                <div class="search-box">
                    <input type="text" placeholder="Tìm kiếm" id="examSearch">
                    <i class="fas fa-search"></i>
                </div>
            </div>
            
            <div class="filter-group view-toggle">
                <button class="toggle-view-btn" id="toggleCalendarView">
                    <i class="fas fa-calendar-alt"></i>
                    <span>Xem ở dạng lịch</span>
                </button>
            </div>
        </div>
    </div>

    <!-- Calendar View (Initially hidden) -->
    <div class="calendar-container" id="calendarView" style="display: none;">
        <div class="calendar-header">
            <div class="month-selector">
                <button class="month-nav-btn" id="prevMonth">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <h2 class="current-month" id="currentMonthYear">Tháng 8 <span class="year-highlight">2025</span></h2>
                <button class="month-nav-btn" id="nextMonth">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>

        <div class="calendar-grid" id="calendarGrid">
            <!-- Day headers -->
            <div class="calendar-day-header">T2</div>
            <div class="calendar-day-header">T3</div>
            <div class="calendar-day-header">T4</div>
            <div class="calendar-day-header">T5</div>
            <div class="calendar-day-header">T6</div>
            <div class="calendar-day-header">T7</div>
            <div class="calendar-day-header">CN</div>
            
            <!-- Calendar days will be generated by JavaScript -->
        </div>

        <!-- Exam Details Sidebar -->
        <div class="exam-details-sidebar" id="examDetailsSidebar" style="display: none;">
            <div class="calendar-sidebar-header">
                <h3>Chi tiết kỳ thi</h3>
                <button class="close-sidebar" id="closeSidebar">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="sidebar-content" id="sidebarContent">
                <!-- Exam details will be injected here -->
            </div>
        </div>
    </div>

    <!-- List View (Default) -->
    <div class="list-view-container" id="listView">
    
    <div class="exams-table-container">
        <table class="exams-table">
            <thead>
                <tr>
                    <th>Tên bài thi</th>
                    <th>Môn học</th>
                    <th>Ngày thi</th>
                    <th>Thời gian</th>
                    <th>Trạng thái</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="examTableBody">
                <!-- Bài thi đang diễn ra - 9/10/2025 (hôm nay) -->
                <tr data-status="in-progress" data-subject="Công nghệ phần mềm nâng cao" data-date="2025-10-09">
                    <td>
                        <div class="exam-name">Kiểm tra giữa kỳ Công nghệ phần mềm nâng cao</div>
                    </td>
                    <td>
                        <div class="subject-name">Công nghệ phần mềm nâng cao</div>
                    </td>
                    <td>
                        <div class="exam-date">9/10/2025</div>
                    </td>
                    <td>
                        <div class="exam-duration">90 phút</div>
                    </td>
                    <td>
                        <span class="exam-status in-progress">Đang diễn ra</span>
                    </td>
                    <td>
                        <div class="exam-actions">
                            <a href="@Url.Action("ExamInfo", "Student", new { examId = 1 })" class="exam-action-btn primary">
                                <i class="fas fa-play"></i>
                                Vào thi
                            </a>
                        </div>
                    </td>
                </tr>
                
                <!-- 15/10/2025 -->
                <tr data-status="upcoming" data-subject="Lập trình web nâng cao" data-date="2025-10-15">
                    <td>
                        <div class="exam-name">Thi cuối kỳ Lập trình web nâng cao</div>
                    </td>
                    <td>
                        <div class="subject-name">Lập trình web nâng cao</div>
                    </td>
                    <td>
                        <div class="exam-date">15/10/2025</div>
                    </td>
                    <td>
                        <div class="exam-duration">120 phút</div>
                    </td>
                    <td>
                        <span class="exam-status upcoming">Sắp diễn ra</span>
                    </td>
                    <td>
                        <div class="exam-actions">
                            <a href="@Url.Action("ExamInfo", "Student", new { examId = 2 })" class="exam-action-btn secondary">
                                <i class="fas fa-info-circle"></i>
                                Chi tiết
                            </a>
                        </div>
                    </td>
                </tr>
                
                <!-- 22/10/2025 -->
                <tr data-status="upcoming" data-subject="Tiếng anh chuyên ngành" data-date="2025-10-22">
                    <td>
                        <div class="exam-name">Kiểm tra Tiếng anh chuyên ngành</div>
                    </td>
                    <td>
                        <div class="subject-name">Tiếng anh chuyên ngành</div>
                    </td>
                    <td>
                        <div class="exam-date">22/10/2025</div>
                    </td>
                    <td>
                        <div class="exam-duration">60 phút</div>
                    </td>
                    <td>
                        <span class="exam-status upcoming">Sắp diễn ra</span>
                    </td>
                    <td>
                        <div class="exam-actions">
                            <a href="@Url.Action("ExamInfo", "Student", new { examId = 3 })" class="exam-action-btn secondary">
                                <i class="fas fa-info-circle"></i>
                                Chi tiết
                            </a>
                        </div>
                    </td>
                </tr>
                
                <!-- 28/10/2025 -->
                <tr data-status="upcoming" data-subject="Kiểm định chất lượng phần mềm" data-date="2025-10-28">
                    <td>
                        <div class="exam-name">Thi giữa kỳ Kiểm định chất lượng phần mềm</div>
                    </td>
                    <td>
                        <div class="subject-name">Kiểm định chất lượng phần mềm</div>
                    </td>
                    <td>
                        <div class="exam-date">28/10/2025</div>
                    </td>
                    <td>
                        <div class="exam-duration">90 phút</div>
                    </td>
                    <td>
                        <span class="exam-status upcoming">Sắp diễn ra</span>
                    </td>
                    <td>
                        <div class="exam-actions">
                            <a href="@Url.Action("ExamInfo", "Student", new { examId = 4 })" class="exam-action-btn secondary">
                                <i class="fas fa-info-circle"></i>
                                Chi tiết
                            </a>
                        </div>
                    </td>
                </tr>
                
                <!-- 5/11/2025 -->
                <tr data-status="upcoming" data-subject="Cơ sở dữ liệu phân tán" data-date="2025-11-05">
                    <td>
                        <div class="exam-name">Thi cuối kỳ Cơ sở dữ liệu phân tán</div>
                    </td>
                    <td>
                        <div class="subject-name">Cơ sở dữ liệu phân tán</div>
                    </td>
                    <td>
                        <div class="exam-date">5/11/2025</div>
                    </td>
                    <td>
                        <div class="exam-duration">120 phút</div>
                    </td>
                    <td>
                        <span class="exam-status upcoming">Sắp diễn ra</span>
                    </td>
                    <td>
                        <div class="exam-actions">
                            <a href="@Url.Action("ExamInfo", "Student", new { examId = 5 })" class="exam-action-btn secondary">
                                <i class="fas fa-info-circle"></i>
                                Chi tiết
                            </a>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    </div> <!-- Close list-view-container -->
</div> <!-- Close my-exams-container -->

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('examSearch');
            const tableBody = document.getElementById('examTableBody');
            const allRows = Array.from(tableBody.querySelectorAll('tr'));

            // Filter functionality
            function filterExams() {
                const searchValue = searchInput.value.toLowerCase().trim();

                allRows.forEach(row => {
                    const examName = row.querySelector('.exam-name').textContent.toLowerCase();
                    const subjectName = row.querySelector('.subject-name').textContent.toLowerCase();

                    // Check search filter
                    const searchMatch = searchValue === '' || 
                                      examName.includes(searchValue) || 
                                      subjectName.includes(searchValue);

                    // Show/hide row based on search filter
                    if (searchMatch) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });

                // Update table visibility
                updateTableVisibility();
            }

            // Update table visibility and show message if no results
            function updateTableVisibility() {
                const visibleRows = allRows.filter(row => row.style.display !== 'none');
                
                // Remove existing no-results message
                const existingMessage = document.querySelector('.no-results-message');
                if (existingMessage) {
                    existingMessage.remove();
                }

                if (visibleRows.length === 0) {
                    // Create and show no results message
                    const noResultsMessage = document.createElement('tr');
                    noResultsMessage.className = 'no-results-message';
                    noResultsMessage.innerHTML = `
                        <td colspan="6" style="text-align: center; padding: 40px; color: #666; font-style: italic;">
                            <i class="fas fa-search" style="font-size: 24px; margin-bottom: 10px; display: block;"></i>
                            Không tìm thấy bài thi nào phù hợp với bộ lọc
                        </td>
                    `;
                    tableBody.appendChild(noResultsMessage);
                }
            }

            // Sort exams by date (nearest first for upcoming, latest first for completed)
            function sortExams() {
                const upcomingExams = [];
                const completedExams = [];
                const inProgressExams = [];

                allRows.forEach(row => {
                    const status = row.getAttribute('data-status');
                    const dateStr = row.getAttribute('data-date');
                    row.examDate = new Date(dateStr);

                    if (status === 'upcoming') {
                        upcomingExams.push(row);
                    } else if (status === 'completed') {
                        completedExams.push(row);
                    } else if (status === 'in-progress') {
                        inProgressExams.push(row);
                    }
                });

                // Sort upcoming exams by nearest date first
                upcomingExams.sort((a, b) => a.examDate - b.examDate);
                
                // Sort completed exams by latest date first
                completedExams.sort((a, b) => b.examDate - a.examDate);
                
                // Sort in-progress exams by nearest date first
                inProgressExams.sort((a, b) => a.examDate - b.examDate);

                // Clear table body and re-append sorted rows
                tableBody.innerHTML = '';
                [...upcomingExams, ...inProgressExams, ...completedExams].forEach(row => {
                    tableBody.appendChild(row);
                });
            }

            // Event listeners for list view
            searchInput.addEventListener('input', filterExams);

            // Initial sort
            sortExams();
            
            // Initial filter (show all)
            filterExams();

            // ===== CALENDAR VIEW FUNCTIONALITY =====
            const toggleBtn = document.getElementById('toggleCalendarView');
            const calendarView = document.getElementById('calendarView');
            const listView = document.getElementById('listView');
            
            console.log('Elements found:', { 
                toggleBtn: !!toggleBtn, 
                calendarView: !!calendarView, 
                listView: !!listView 
            });

            if (!toggleBtn || !calendarView || !listView) {
                console.error('Missing required elements for calendar view!');
                return;
            }

            const today = new Date();
            let currentMonth = today.getMonth(); // Current month (0-indexed, so October = 9)
            let currentYear = today.getFullYear(); // Current year
            let isCalendarView = false;

            console.log('Calendar initialized:', { currentMonth, currentYear, today });

            // Sample exam data (matching the table data)
            const examData = [
                { id: 1, name: 'Kiểm tra giữa kỳ Công nghệ phần mềm nâng cao', subject: 'Công nghệ phần mềm nâng cao', date: new Date(2025, 9, 9), duration: '90 phút', status: 'in-progress' },
                { id: 2, name: 'Thi cuối kỳ Lập trình web nâng cao', subject: 'Lập trình web nâng cao', date: new Date(2025, 9, 15), duration: '120 phút', status: 'upcoming' },
                { id: 3, name: 'Kiểm tra Tiếng anh chuyên ngành', subject: 'Tiếng anh chuyên ngành', date: new Date(2025, 9, 22), duration: '60 phút', status: 'upcoming' },
                { id: 4, name: 'Thi giữa kỳ Kiểm định chất lượng phần mềm', subject: 'Kiểm định chất lượng phần mềm', date: new Date(2025, 9, 28), duration: '90 phút', status: 'upcoming' },
                { id: 5, name: 'Thi cuối kỳ Cơ sở dữ liệu phân tán', subject: 'Cơ sở dữ liệu phân tán', date: new Date(2025, 10, 5), duration: '120 phút', status: 'upcoming' },
            ];

            // Toggle between calendar and list view
            toggleBtn.addEventListener('click', function() {
                console.log('Toggle clicked! isCalendarView:', isCalendarView);
                isCalendarView = !isCalendarView;
                
                if (isCalendarView) {
                    console.log('Switching to calendar view');
                    calendarView.style.display = 'block';
                    listView.style.display = 'none';
                    toggleBtn.innerHTML = '<i class="fas fa-list"></i><span>Xem ở dạng danh sách</span>';
                    renderCalendar();
                } else {
                    console.log('Switching to list view');
                    calendarView.style.display = 'none';
                    listView.style.display = 'block';
                    toggleBtn.innerHTML = '<i class="fas fa-calendar-alt"></i><span>Xem ở dạng lịch</span>';
                }
            });

            // Month navigation
            document.getElementById('prevMonth').addEventListener('click', function() {
                currentMonth--;
                if (currentMonth < 0) {
                    currentMonth = 11;
                    currentYear--;
                }
                renderCalendar();
            });

            document.getElementById('nextMonth').addEventListener('click', function() {
                currentMonth++;
                if (currentMonth > 11) {
                    currentMonth = 0;
                    currentYear++;
                }
                renderCalendar();
            });

            // Render calendar
            function renderCalendar() {
                console.log('Rendering calendar for:', currentMonth, currentYear);
                
                const monthNames = ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 
                                   'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'];
                
                document.getElementById('currentMonthYear').innerHTML = 
                    `${monthNames[currentMonth]} <span class="year-highlight">${currentYear}</span>`;

                const firstDay = new Date(currentYear, currentMonth, 1);
                const lastDay = new Date(currentYear, currentMonth + 1, 0);
                const startDayOfWeek = firstDay.getDay() === 0 ? 6 : firstDay.getDay() - 1; // Adjust for Monday start
                const daysInMonth = lastDay.getDate();

                console.log('Calendar info:', { firstDay, lastDay, startDayOfWeek, daysInMonth });

                const calendarGrid = document.getElementById('calendarGrid');
                
                if (!calendarGrid) {
                    console.error('Calendar grid not found!');
                    return;
                }
                
                // Remove all existing day cells (keep headers)
                const existingDays = calendarGrid.querySelectorAll('.calendar-day, .calendar-day.empty');
                console.log('Removing existing days:', existingDays.length);
                existingDays.forEach(day => day.remove());

                // Add empty cells for days before the first day of the month
                for (let i = 0; i < startDayOfWeek; i++) {
                    const emptyCell = document.createElement('div');
                    emptyCell.className = 'calendar-day empty';
                    calendarGrid.appendChild(emptyCell);
                }

                // Add days of the month
                const today = new Date();
                for (let day = 1; day <= daysInMonth; day++) {
                    const dayCell = document.createElement('div');
                    dayCell.className = 'calendar-day';
                    
                    const currentDate = new Date(currentYear, currentMonth, day);
                    const dateString = currentDate.toDateString();
                    
                    // Check if today
                    if (currentDate.toDateString() === today.toDateString()) {
                        dayCell.classList.add('today');
                    }
                    
                    // Check if there's an exam on this day
                    const examsOnThisDay = examData.filter(exam => 
                        exam.date.toDateString() === dateString
                    );
                    
                    if (examsOnThisDay.length > 0) {
                        dayCell.classList.add('has-exam');
                        dayCell.dataset.examCount = examsOnThisDay.length;
                        
                        // Add click event to show exam details
                        dayCell.addEventListener('click', function() {
                            showExamDetails(examsOnThisDay, day);
                        });
                    }
                    
                    dayCell.innerHTML = `<span class="day-number">${day}</span>`;
                    
                    if (examsOnThisDay.length > 0) {
                        dayCell.innerHTML += `<span class="exam-indicator">${examsOnThisDay.length} kỳ thi</span>`;
                    }
                    
                    calendarGrid.appendChild(dayCell);
                }
            }

            // Show exam details in sidebar
            function showExamDetails(exams, day) {
                const sidebar = document.getElementById('examDetailsSidebar');
                const content = document.getElementById('sidebarContent');
                
                let html = `<h4>${day} ${getMonthName(currentMonth)} ${currentYear}</h4>`;
                
                exams.forEach(exam => {
                    const statusClass = exam.status === 'upcoming' ? 'upcoming' : 
                                       exam.status === 'in-progress' ? 'in-progress' : 'completed';
                    const statusText = exam.status === 'upcoming' ? 'Sắp diễn ra' : 
                                      exam.status === 'in-progress' ? 'Đang diễn ra' : 'Đã hoàn thành';
                    
                    html += `
                        <div class="exam-detail-card">
                            <h5>${exam.name}</h5>
                            <div class="exam-detail-info">
                                <p><strong>Môn học:</strong> ${exam.subject}</p>
                                <p><strong>Thời gian:</strong> ${exam.duration}</p>
                                <p><strong>Trạng thái:</strong> <span class="exam-status ${statusClass}">${statusText}</span></p>
                            </div>
                            <div class="exam-detail-actions">
                                <a href="/Student/ExamInfo?examId=${exam.id}" class="exam-action-btn primary">
                                    ${exam.status === 'in-progress' ? '<i class="fas fa-play"></i> Vào thi' : '<i class="fas fa-info-circle"></i> Chi tiết'}
                                </a>
                            </div>
                        </div>
                    `;
                });
                
                content.innerHTML = html;
                sidebar.style.display = 'block';
            }

            // Close sidebar
            document.getElementById('closeSidebar').addEventListener('click', function() {
                document.getElementById('examDetailsSidebar').style.display = 'none';
            });

            function getMonthName(month) {
                const names = ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6',
                              'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'];
                return names[month];
            }
        });
    </script>
}